{"version":3,"sources":["api.js","components/Checkbox.js","components/Row.jsx","components/Button.jsx","components/Table.jsx","components/App.jsx","index.jsx"],"names":["fetchApi","url","Promise","resolve","reject","fetch","then","response","ok","json","alert","data","catch","e","CallApi","CheckboxLabel","styled","label","props","checked","css","Checkbox","this","type","onChange","event","onCheckChange","className","React","Component","ActionButtonsWrap","div","ActionBtn","edit","remove","Row","Fragment","onCheckStateChanged","id","person","full_name","age","height","weight","salary","onClick","onRemove","DelBtn","disabled","Button","onDeleteClick","Table","state","people","getPeopleData","preparePeopleDetails","oldHeight","pd","replace","smFull","split","Math","round","oldWeight","eur","currencyData","rates","USD","birth_date","Date","now","slice","loadedPeople","forEach","element","i","first_name","last_name","convertDate","date_of_birth","convertHeight","convertWeight","convertSalary","push","setState","Array","length","fill","target","newCheckedState","nativeEvent","shiftKey","includes","lastChecked","indexOf","map","elem","newChecked","filter","item","index","newPeople","checkedIds","reduce","arr","all","getCurrencyData","peopleRes","currencyRes","handleHeadingCheck","handleRowCheck","handleRowRemoveClick","handleRemoveChecked","Styles","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38853454.chunk.js","sourcesContent":["export const fetchApi = (url) => {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(response => {\n        if(response.ok) {\n          return response.json();\n        } else {\n          alert(\"Ошибка загрузки данных\");\n        }\n      })\n      .then(data => {\n        resolve(data);\n      })\n      .catch((e) => {\n        alert(\"При загрузке произошла ошибка: \\n\" + e);\n      });\n  });\n}\n\nexport default class CallApi {\n\n  static getPeopleData() {\n    return fetchApi(\"https://api.npoint.io/324f4ca2cdd639760638\");\n  }\n\n  static getCurrencyData(){\n    return fetchApi(\"http://api.exchangeratesapi.io/v1/latest?access_key=fe414feb63fe888fecfc75f6234266cb&format=1\");\n  }\n\n}","import React from \"react\";\nimport styled, {css} from 'styled-components';\n\nconst CheckboxLabel = styled.label`\n  display: block;\n  position: relative;\n  width: 16px;\n  height: 16px;\n  ${'' /* padding: 3px; */}\n  border: solid 2px #e8e8e8;\n  border-radius: 6px;\n  background-color: #fff;\n\n  .checkmark{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 3px;\n    background-color: #82af00;\n    cursor: pointer;\n    display: none;\n  }\n\n  input{\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    opacity: 0;\n    margin: 0;\n  }\n\n  ${props => props.checked && css`\n    .checkmark{\n      display: block;\n    }\n  `}\n`;\n\nexport default class Checkbox extends React.Component {\n  render() {\n    return(\n      <CheckboxLabel checked={this.props.checked}>\n        <input \n          type=\"checkbox\" \n          onChange={(event) => {this.props.onCheckChange(event)}} \n        />\n        <span className=\"checkmark\"></span>\n      </CheckboxLabel>\n    );\n  }\n}","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport Checkbox from \"./Checkbox\";\n\nconst ActionButtonsWrap = styled.div`\n  display: flex;\n  width: max-content;\n  margin-left: auto;\n`;\n\nconst ActionBtn = styled.div`\n  width: 22px;\n  height: 24px;\n  margin: 0 11px;\n  cursor: pointer;\n\n  ${props => props.edit && css`\n    background: url(\"/icons/edit_btn.svg\") no-repeat;\n    &:hover{\n      background: url(\"/icons/edit_btn_hover.svg\") no-repeat;\n    }\n  `}\n\n  ${props => props.remove && css`\n    background: url(\"/icons/remove_btn.svg\") no-repeat;\n    &:hover{\n      background: url(\"/icons/remove_btn_hover.svg\") no-repeat;\n    }\n  `}\n`;\n\nexport default class Row extends React.Component {\n  render() {\n    return(\n      <React.Fragment>\n        <tr>\n          <td className=\"person-checkbox\">\n            <Checkbox \n              onCheckChange={(event) => this.props.onCheckStateChanged(event)} \n              checked={this.props.checked}\n            />\n          </td>\n          <td className=\"person-number\">{this.props.id}</td>\n          <td className=\"person-name\">{this.props.person.full_name}</td>\n          <td className=\"person-age\">{this.props.person.age}</td>\n          <td className=\"person-height\">{this.props.person.height}</td>\n          <td className=\"person-weight\">{this.props.person.weight}</td>\n          <td className=\"person-salary\">{this.props.person.salary}</td>\n          <td>\n            <ActionButtonsWrap>\n              <ActionBtn edit/>\n              <ActionBtn remove onClick={this.props.onRemove} />\n            </ActionButtonsWrap>\n          </td>\n        </tr>\n      </React.Fragment>\n    );\n  }\n}","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\n\nconst DelBtn = styled.div`\n  font-family: \"Roboto\", sans-seif;\n  color: #dbdbdb;\n  background: white;\n  border: 2px solid #dbdbdb;\n  font-size: 14px;\n  font-weight: bold;\n  border-radius: 10px;\n  width: max-content;\n  min-width: 139px;\n  line-height: 16px;\n  padding: 16px 39px;\n  margin-left: auto;\n  margin-top: 20px;\n  cursor: pointer;\n  ${props => !props.disabled && css`\n    color: white;\n    background: #0085be;\n    border: 2px solid #0085be;\n    &:hover {\n      background: #02597e;\n      border: 2px solid #02597e;\n    }\n    &:active {\n      background: #002abe;\n      border: 2px solid #002abe;\n    }\n  `}\n`;\n\nexport default class Button extends React.Component {\n  render() {\n    return (\n      <DelBtn disabled={this.props.disabled} onClick={this.props.onDeleteClick}>\n        Удалить выбранные\n      </DelBtn>\n    );\n  }\n}","import React from \"react\";\nimport CallApi from \"../api\";\nimport Checkbox from \"./Checkbox\";\nimport Row from \"./Row\";\nimport Button from \"./Button\";\n\nexport default class Table extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        people: [],\n        checked: []\n      }\n    }\n  \n    getPeopleDetails(){\n      CallApi.getPeopleData()\n        .then(data => {\n          this.preparePeopleDetails(data);\n        });\n    }\n  \n    convertHeight(oldHeight) {//TODO проверить правильность расчета вручную\n      let pd = oldHeight.replace(\"\\\"\", \"\");\n      pd = pd.split(\"'\");\n      let smFull = pd[0]*30.48 + pd[1]*2.54;\n      let mSm = 0;\n      if(smFull > 200)\n        mSm = \"2м \" + Math.round(smFull-200) + \"см\";\n      else if(smFull >100)\n        mSm = \"1м \" + Math.round(smFull-100) + \"см\";\n      else\n        mSm = smFull + \"см\";\n      return mSm;\n    }\n  \n    convertWeight(oldWeight) {\n      const weightKg = Math.round(oldWeight * 0.453592);\n      return weightKg + \" кг\";\n    }\n\n    convertSalary(eur) {\n       const salaryUSD = Math.round(eur * this.state.currencyData.rates.USD);\n       return \"$\" + salaryUSD;\n    }\n\n    convertDate(birth_date) {\n      return Math.round((Date.now()/1000 - birth_date) / (3600 * 24 * 365))\n    }\n  \n    preparePeopleDetails(){\n      const data = this.state.people.slice();\n      let loadedPeople = [];\n      data.forEach((element, i) => {\n        let person = {};\n        person.full_name = element.first_name + \" \" + element.last_name;\n        person.age = this.convertDate(element.date_of_birth);\n        person.height = this.convertHeight(element.height);\n        person.weight = this.convertWeight(element.weight);\n        person.salary = this.convertSalary(element.salary);//TODO перевести в $\n        loadedPeople.push(person);\n      });\n      this.setState({\n        people: loadedPeople, \n        checked: new Array(loadedPeople.length).fill(false)\n      });\n    }\n  \n    handleRowCheck(id, event){\n      const checked = event.target.checked;\n      let newCheckedState = this.state.checked.slice();\n      if(event.nativeEvent.shiftKey){\n        if(this.state.checked.includes(true)){\n          const lastChecked = this.state.checked.indexOf(true);\n            newCheckedState = newCheckedState.map((elem, i) => {\n              if((i >= id && i <= lastChecked) || elem === true) {\n                return elem = true;\n              }\n              else if((i <= id && i >= lastChecked)) {\n                return elem = true;\n              }\n              return false;\n            });\n        }\n      }\n      newCheckedState[id] = checked;\n      this.setState({checked: newCheckedState});\n    }\n  \n    handleHeadingCheck(event){\n      const checked = event.target.checked;\n      let newChecked = this.state.checked.slice();\n      newChecked = newChecked.fill(checked);\n      this.setState({checked: newChecked});\n    }\n  \n    handleRowRemoveClick(id){\n      let newChecked = this.state.checked.filter((item, index) => index !== id);\n      let newPeople = this.state.people.filter((item, index) => index !== id);\n      this.setState({people: newPeople, checked: newChecked});\n    }\n  \n    handleRemoveChecked(){\n      let checkedIds = this.state.checked.slice().reduce((arr, elem, index) => {\n        if(elem === true) arr.push(index);\n          return arr;\n      }, []);\n      let newChecked = this.state.checked.filter((item, index) => !checkedIds.includes(index));\n      let newPeople = this.state.people.filter((item, index) => !checkedIds.includes(index));\n      this.setState({people: newPeople, checked: newChecked});\n    }\n  \n    componentDidMount() {\n      Promise.all([\n        CallApi.getPeopleData(),\n        CallApi.getCurrencyData(),\n      ]).then(([peopleRes, currencyRes]) => {\n        this.setState({\n          people: peopleRes,\n          currencyData: currencyRes\n        }, () => {\n          this.preparePeopleDetails();\n        });\n      });\n    }\n  \n    render() {//выкинуть все это в компонент table, слишком грязно, тут оставить только App, в котором будет исключительно <Table />\n      const colsList = [\"№\", \"ФИО\", \"Возраст(лет)\", \"Рост\", \"Вес\", \"Зарплата\", \"\"]\n  \n      return(\n        <React.Fragment>\n          <h1>\n            Таблица пользователей\n          </h1>\n            <table>\n              <thead>\n                <tr>\n                  <th>\n                  <Checkbox \n                    onCheckChange={(event) => this.handleHeadingCheck(event)}\n                    checked={!this.state.checked.includes(false)}\n                  />\n                  </th>\n                  {colsList.map((item, index) => (\n                    <th key={index}>{item}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n              {this.state.people.map((element, index) => (\n                <Row \n                  key={index}\n                  id={index+1}\n                  person={element}\n                  onCheckStateChanged={(event) => this.handleRowCheck(index, event)}\n                  onRemove={() => this.handleRowRemoveClick(index)}\n                  checked={this.state.checked[index]}\n                />\n              ))}\n            </tbody>\n            </table>\n          <Button\n            onDeleteClick={() => this.handleRemoveChecked()}\n            disabled={!this.state.checked.includes(true)}\n          />\n        </React.Fragment>\n      );\n    }\n  }","import React from \"react\";\nimport styled from 'styled-components';\nimport Table from \"./Table\";\n\nconst Styles = styled.div`\n  width: 1200px;\n  margin: auto;\n\n  h1 {\n    font-family: 'Roboto', sans-serif;\n    font-size: 24px;\n    font-weight: bold;\n    font-stretch: normal;\n    line-height: normal;\n    color: #4c4c4c;\n  }\n\n  table {\n    border-radius: 6px;\n    background: #ffffff;\n    margin: auto;\n    width: 100%;\n    margin: 16px 0 24px;\n    padding: 0 0 16px;\n    box-shadow: 0 4px 10px 0 rgba(0, 0, 0, 0.1);\n    border: 1px solid #f5f5f5;\n    border-spacing: 0;\n  }\n\n  thead {\n    background: #f0f0f0;\n    font-size: 14px;\n    font-weight: bold;\n    font-family: 'Roboto', sans-serif;\n    color: #4c4c4c;\n  }\n\n  tbody tr:nth-child(2n){\n    background: #fafafa !important;\n  }\n\n  th,\n  td {\n    padding: 12px 15px;\n    text-align: left;\n  }\n\n  td {\n    font-size: 14px;\n    font-family: 'Roboto', sans-serif;\n    color: #4c4c4c;\n    min-height: 48px;\n  }\n\n  td.person-checkbox,\n  td.person-number{\n    width: 20px;\n  }\n\n  td.person-name{\n    width: 280px;\n  }\n\n  td.person-age{\n    width: 130px;\n  }\n\n  td.person-weight,\n  td.person-height{\n    width: 80px;\n  }\n\n`;\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Styles>\n        <Table />\n      </Styles>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}